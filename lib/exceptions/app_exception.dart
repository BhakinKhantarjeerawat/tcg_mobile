

/// Base class for all client-side errors that can be generated by the app
sealed class AppException implements Exception {
  AppException(this.code, this.message);
  final String code;
  final String message;

  @override
  String toString() => message;
}

String fn(AppException exception) {
  return switch (exception) {
    WeakPasswordException() => 'Password is too weak',
    EmptyEmailOrPasswordException() => "empty email or password",
    EmailAlreadyInUseException() => 'Email already in use',
    WrongPasswordException() => 'Wrong password',
    UserNotFoundException() => 'User not found',
  };
}

class EmptyEmailOrPasswordException extends AppException {
  EmptyEmailOrPasswordException()
      : super('empty-email-or-password', 'ไม่ได้ป้อนอีเมลล์หรือพาสเวิร์ด');
}

class EmailAlreadyInUseException extends AppException {
  EmailAlreadyInUseException()
      : super('email-already-in-use', 'คนอื่นใช้อีเมลล์ที่ว่านี้แล้ว');
}

class WeakPasswordException extends AppException {
  WeakPasswordException() : super('weak-password', 'รหัสผ่านคาดเดาง่ายไป');
}

class WrongPasswordException extends AppException {
  WrongPasswordException() : super('wrong-password', 'รหัสผิด');
}

class UserNotFoundException extends AppException {
  UserNotFoundException() : super('user-not-found', 'ไม่พบผู้ใช้');
}

